function [reg_test,J_test,Ju_test,u_opt,Jopt_test,par_span_test,bias] = GenerateTestData(meas_set, Ntest,Noise)

rng(20200128)

%% Dataset generation

% First the base datasets...

par0.T0=60;      % C
par0.w0=100;     % kW/K
par0.wh1=30;     % kW/K
par0.wh2=50;     % kW/K
par0.Th1=120;    % C
par0.Th2=220;    % C
par0.UA1=50;     % kW/K
par0.UA2=80;     % kW/K


parnames = fieldnames(par0);

% Test Data

randmatrix = rand(Ntest,length(parnames));
parmatrix = nan(Ntest,length(parnames));       %Test dataset
% U=lhsdesign(Ntest,length(parnames)+1);     %Training dataset
for i = 1:length(parnames)
    parmatrix(:,i) = par0.(parnames{i})*(1 + Noise*(2*randmatrix(:,i) - 1));    %Test dataset
% parmatrix(:,i) = par0.(parnames{i})*(1+0.1*(2*U(:,i)-1));   %Training dataset
end

par_span_test = array2table(parmatrix,'VariableNames',parnames);
u_span_test = rand(Ntest,1);      %Test dataset
% u_span_test = U(:,end);        %Training dataset


Ju_test = hex_grad(u_span_test,par_span_test);

u_opt=zeros(1,Ntest);
for j = 1:Ntest
    u_opt(j) = Hex_Opt(par_span_test(j,:));
        [T(j,1),meas_span_test(j,:)] = hex_output(u_opt(j),par_span_test(j,:));
end

Jopt_test = T;
[J_test,meas_span_test] = hex_output(u_span_test,par_span_test);
% Test

switch meas_set
    case 1
        bias = [normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 2, size(meas_span_test.T0))];
        reg_test = table(meas_span_test.T0 + bias(:,1), ...
            meas_span_test.T1 + bias(:,2), ...
            meas_span_test.Th1 + bias(:,3), ...
            meas_span_test.T2 + bias(:,4), ...
            meas_span_test.Th2 + bias(:,5));
        
    case 2
        bias = [normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 2, size(meas_span_test.T0))];
        reg_test = table(meas_span_test.T0 + bias(:,1), ...
            meas_span_test.Th1 + bias(:,2), ...
            meas_span_test.Th2 + bias(:,3), ...
            meas_span_test.Th1e + bias(:,4), ...
            meas_span_test.Th2e + bias(:,5));
    case 3
        bias = [normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 0.1*par_span_test.w0),...
            normrnd(0, 0.1*par_span_test.wh1),...
            normrnd(0, 0.1*par_span_test.wh2)];
        reg_test = table(meas_span_test.T0 + bias(:,1), ...
            meas_span_test.T +bias(:,2), ...
            meas_span_test.Th1e + bias(:,3), ...
            meas_span_test.Th2e + bias(:,4), ...
            par_span_test.w0 + bias(:,5), ...
            par_span_test.wh1 + bias(:,6), ...
            par_span_test.wh2 + bias(:,7));
    case 4
        bias = [normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 0.01, size(u_span_test))];
        reg_test = table(meas_span_test.T0 + bias(:,1), ...
            meas_span_test.T + bias(:,2), ...
            meas_span_test.Th1 + bias(:,3), ...
            meas_span_test.Th2 +bias(:,4), ...
            u_span_test +bias(:,5));
    case 5
        bias = [normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 2, size(meas_span_test.T0)), ...
            normrnd(0, 0.01, size(u_span_test))];
        reg_test = table(meas_span_test.T+ bias(:,1), ...
                meas_span_test.T1+ bias(:,2), ...
                meas_span_test.T2+ bias(:,3), ...
                u_span_test+ bias(:,4));
end
% reg_test=addvars(reg_test,constr_status);
end
function F = myfun(u,T,par)
Th1 = par.Th1; Th2 = par.Th2; T0 = par.T0;
w0 = par.w0; wh1 = par.wh1; wh2 = par.wh2;
UA1 = par.UA1; UA2 = par.UA2;

T1 = T0 + (Th1-T0)./(1/2+u.*w0.*(1./(2*wh1)+1./UA1));
T2 = T0 + (Th2-T0)./(1/2+(1-u).*w0.*(1./(2*wh2)+1./UA2));

F = u.*T1 + (1-u).*T2    - T;

end
